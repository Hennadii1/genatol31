1. Какой тип данных может быть ключом в словаре?

Любой неизменяемый тип данных

2. Можно ли получить доступ к элементу сета через индекс?

да

3. Есть кортеж вида a = ([1,2,3,4], {2,3,4}, 4). Выполняется ли
операция a[0][2] = 100 ?

да

4. Что вернет следующий код:
def mix_str(a_str):
a_str = ‘Hello world!’
a_str.replace(‘Hello’, ‘Hi’)
return a_str
mix_str(‘Hello everyone!’)

Hi world

5. Есть два списка как можно их сравнить ?

можно сравнить их длины
можно сравнить на совпадение одинаковых элементов set
можно сравнить колиство элементов coint
можно сравнить по элементно

6. Как можно обращаться к дикту по ключам? В чем различие?

через .get() и через ключ
первое если не уверены в том, что такой ключ есть, второе если -  уверены

7. Написать функцию которая формирует список из чисел
Фибоначчи. На вход функции приходит количество итераций.

n = int(input())

def fib(n):
    if n <= 1:
        return n
    else:
        return (fib(n-1) + fib(n-2))

for i in range(n):
    print(fib(i))

8. Написать рекурсивный подсчет суммы элементов списка.

list1 = [1,2,3,4,5]

def sum(n):
    if n == []:
        return 0
    else:
        return n[0] + sum(n[1:])

print(sum(list1))

9. Какие типы данных есть в Python ?

изменяемые и не изменяемые

10. Что такое класс ?

класс это чертеж описываемого объекта

11. Что такое объект ?

это экзепляр класса. некая сущность, которая имеет определеные характеристики

12. Что из себя представляют args и kwargs в аргументах
функции?

args неименованые аргументы функций, kwargs - именованые

13. Из чего состоит менеджер контекста ?

из магиченских методов enter и exit. enter возвращает self, а в
exit описывает код, который запустится когда менеджер контекста отрабовал или отработал с ошибкой

14. Какая структура конструкции отлова ошибок в Python?

try:
    №1......код
except Имя ошибки
else:
    №2.......код
finally:
    зап. всегда........ код

15. Различие между с и continue.

exit останавливает цикл
continue переходить на след итерацию

16. Что такое self в классе ?

это ссылка на объект данного класса

17. Для чего используется return ?

возвращает значение функции

18. Что делает и что возвращает функция input()?

ввод данных с клавиатуры

19. Написать любой класс и представить его в виде json (dict’а)20. Написать класс который хранит в себе число и имеет
методы сравнения.

21. Написать итератор для списка книг в библиотеке. Также
реализовать возможность получения книги по имени автора.



22. Реализовать пример наследования.

class Animal:
    def __init__(self, name, color):
        self.name = name
        self.color = color

class Cat(Animal):
    def cat(self):
        print('Cat...')

animal = Cat('Murka', 'green')
print(animal.color)
print(animal.name)
animal.cat()

23. Приведите пример полиморфизма.

class Animal:
    def __init__(self, name, color):
        self.name = name
        self.color = color

class Cat(Animal):
    def __init__(self, name, color, weight):
        Animal.__init__(self, name, color)
        self.weight = weight

    def cat(self):
        print('Cat...')

animal = Cat('Murka', 'green', '5')
print(animal.color)
print(animal.name)
animal.cat()
print(animal.weight)

24. Как можно прочесть файл в Python ?

file = open('file nema', 'режим чтения')

25. Опишите работу условной конструкции.

if условие :
    код если условие True
else:
    код если условие False

26. Какие циклы есть в Python ? В чем их отличие?

for - счетчик
while - счетчик с условием

27. Чему будет равна переменная b в коде?
a = [1,2,3,4,5,6,7]
b = a
a.append(8)

[1,2,3,4,5,6,7]

28. Какие есть модификаторы доступа в Python? В чем их
отличие.
29. Какие типы делений есть в Python ?

//
%

30. Какие типы данных может хранить список в Python ?

любые

31. Чему будет равна переменная a в коде:
a = 100
def represent_int(a):
a += 100
return a
represent_int(a)
print(a)

100